{"version":3,"file":"component---src-pages-index-js-54353568634192b91d04.js","mappings":"oMAoBe,SAASA,EAAYC,GAClC,MAAM,KAAEC,GAASD,EACXE,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAMpD,OACEC,EAAAA,cAAA,WACEC,IAAKN,EAAKG,OAAOC,KACjBG,UAAU,mEACVC,QAASA,KAAMC,OARKC,EAQUV,EAAKG,OAAOC,UAP5CO,EAAAA,EAAAA,UAASD,GADX,IAAwBA,CAQ4B,GAChDL,EAAAA,cAAA,cACEA,EAAAA,cAAA,QAAME,UAAU,WAAWN,GAC3BI,EAAAA,cAAA,WAAML,EAAKE,YAAYU,OAGzBP,EAAAA,cAAA,WAASE,UAAU,QACjBF,EAAAA,cAAA,OAAKQ,IAAM,GAAEb,EAAKG,OAAOC,QAAQJ,EAAKE,YAAYY,OAAQP,UAAU,iBACpEF,EAAAA,cAAA,QACEU,wBAAyB,CACvBC,OAAQhB,EAAKE,YAAYe,aAAejB,EAAKkB,SAE/CC,SAAS,gBAEXd,EAAAA,cAAA,KAAGE,UAAU,6CAA4C,iBAIjE,CC3Ce,SAASa,EAAKrB,GAC3B,MAAM,MAAEsB,GAAUtB,EAElB,OACEM,EAAAA,cAAA,OAAKE,UAAU,2BACbF,EAAAA,cAAA,OAAKE,UAAU,qBACbF,EAAAA,cAAA,OAAKE,UAAU,SACZc,EAAMC,KAAKtB,GACHK,EAAAA,cAACP,EAAW,CAACE,KAAMA,QAMtC,CCnBe,SAASuB,IACtB,OACElB,EAAAA,cAAA,OAAKE,UAAU,8DAA8DiB,MAAO,CAAEC,WAAY,0EAA2EC,OAAQ,SACnLrB,EAAAA,cAAA,WAEEA,EAAAA,cAAA,OAAKE,UAAU,WAAU,iBACzBF,EAAAA,cAAA,WAAK,sDAIb,CCVe,SAASsB,IACtB,SAASC,IACP,MAAMC,EAAiBC,OAAOC,QACxBC,EAAiBF,OAAOG,eAAiBH,OAAOG,eAAeP,OAAS,EAExEQ,EAAoBL,GADHM,SAASC,gBAAgBC,aACaL,GAAmB,IAC1EM,EAAWH,SAASI,eAAe,YAErCD,GAAYA,EAASd,QACvBc,EAASd,MAAMgB,MAAQN,EAAmB,IAE9C,CAEA,SAASO,IACPX,OAAOY,oBAAoB,SAAUd,EACvC,CAOA,OALAe,EAAAA,EAAAA,YAAU,KACRb,OAAOc,iBAAiB,SAAUhB,GAC3Ba,IACN,IAGDpC,EAAAA,cAAA,OAAKwC,GAAG,WAAWtC,UAAU,8DAEjC,CCrBe,SAASuC,EAAKC,GAAY,IAAX,KAAEC,GAAMD,EACpC,MAAM1B,EAAQ2B,EAAKC,kBAAkBC,MAErC,OACE7C,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKE,UAAU,4DACbF,EAAAA,cAAA,OAAKE,UAAU,6EACbF,EAAAA,cAAA,OAAKE,UAAU,YACbF,EAAAA,cAAC8C,EAAI,QAGT9C,EAAAA,cAAA,OAAKmB,MAAO,CAAE4B,UAAW,UACvB/C,EAAAA,cAACe,EAAI,CAACC,MAAOA,MAGjBhB,EAAAA,cAACsB,EAAQ,MAGf,C","sources":["webpack://gatsby-starter-blog/./src/components/ArticleCard.tsx","webpack://gatsby-starter-blog/./src/components/Main.tsx","webpack://gatsby-starter-blog/./src/components/Hero.tsx","webpack://gatsby-starter-blog/./src/components/Scroller.tsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby'\n\nexport type Post = {\n  frontmatter: {\n    title: string\n    description: string\n    date: string\n    icon: string\n  },\n  fields: {\n    slug: string\n  }\n  excerpt: string\n}\n\ntype Props = {\n  post: Post\n}\n\nexport default function ArticleCard(props: Props) {\n  const { post } = props\n  const title = post.frontmatter.title || post.fields.slug\n\n  function navigateToPost(url: string) {\n    navigate(url)\n  }\n\n  return (\n    <article\n      key={post.fields.slug}\n      className=\"cursor-pointer p-6 hover:shadow-[0_0_40px_-15px_rgba(0,0,0,0.2)]\"\n      onClick={() => navigateToPost(post.fields.slug)}>\n      <header>\n        <span className=\"text-xl\">{title}</span>\n        <div>{post.frontmatter.date}</div>\n      </header>\n\n      <section className=\"mt-3\">\n        <img src={`${post.fields.slug}/${post.frontmatter.icon}`} className=\"article-icon\" />\n        <span\n          dangerouslySetInnerHTML={{\n            __html: post.frontmatter.description || post.excerpt\n          }}\n          itemProp=\"description\"\n        />\n        <p className=\"text-[color:var(--color-primary)] text-sm\">Read more...</p>\n      </section>\n    </article>\n  )\n}\n","import React from 'react'\nimport ArticleCard, { Post } from './ArticleCard'\n\ntype Props = {\n  posts: Post[]\n}\n\nexport default function Main(props: Props) {\n  const { posts } = props\n  \n  return (\n    <div className=\"relative bg-white pt-12\">\n      <div className=\"w-[650px] mx-auto\">\n        <div className=\"pt-12\">\n          {posts.map((post) => {\n            return <ArticleCard post={post} />\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function HeaderNew() {\n  return (\n    <div className=\"h-[100%] w-[100%] flex flex-col items-center justify-center\" style={{ background: 'radial-gradient(circle, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%)', height: '100%' }}>\n      <div>\n        {/* <div style={{ background: 'url(/img/fib.png)', width: '72px', height: '72px', backgroundSize: 'contain', borderRadius: '10px'  }}></div> */}\n        <div className=\"text-xl\">Florin Toader</div>\n        <div>Welcome to my professional abode on the internet.</div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport default function Scroller() {\n  function onScroll() {\n    const scrollPosition = window.scrollY\n    const viewportHeight = window.visualViewport ? window.visualViewport.height : 0\n    const documentHeight = document.documentElement.scrollHeight\n    const scrollPercentage = (scrollPosition / (documentHeight - viewportHeight)) * 100\n    const scroller = document.getElementById('scroller')\n\n    if (scroller && scroller.style) {\n      scroller.style.width = scrollPercentage + '%'\n    }\n  }\n\n  function onCleanup() {\n    window.removeEventListener('scroll', onScroll)\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll)\n    return onCleanup\n  }, [])\n\n  return (\n    <div id=\"scroller\" className=\"fixed h-[3px] left-0 top-0 bg-[color:var(--color-primary)]\"></div>\n  )\n}\n\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Main from '../components/Main'\nimport Hero from '../components/Hero'\nimport Scroller from '../components/Scroller'\n\nexport default function Index({ data }) {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <div>\n      <div className=\"flex flex-col bg-[url(/img/an_bk.jpg)] bg-fixed bg-cover\">\n        <div className=\"w-[1000px] h-[600px] mt-[40px] mx-auto rounded-sm z-50 shadow-2xl blur-md\">\n          <div className=\"h-[100%]\">\n            <Hero />\n          </div>\n        </div>\n        <div style={{ marginTop: '-50px' }}>\n          <Main posts={posts} />\n        </div>\n      </div>\n      <Scroller />\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          icon\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["ArticleCard","props","post","title","frontmatter","fields","slug","React","key","className","onClick","navigateToPost","url","navigate","date","src","icon","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","Main","posts","map","HeaderNew","style","background","height","Scroller","onScroll","scrollPosition","window","scrollY","viewportHeight","visualViewport","scrollPercentage","document","documentElement","scrollHeight","scroller","getElementById","width","onCleanup","removeEventListener","useEffect","addEventListener","id","Index","_ref","data","allMarkdownRemark","nodes","Hero","marginTop"],"sourceRoot":""}