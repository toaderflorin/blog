{"version":3,"file":"component---src-templates-blog-post-js-4cca7a031448001693d5.js","mappings":"6KAEe,SAASA,EAAOC,GAC7B,MAAM,SAAEC,EAAQ,SAAEC,GAAaF,EAG/B,OACEG,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAQC,UAAU,iBAJlBC,WAKAF,EAAAA,cAAA,YACGD,GAIT,C,4FCZe,SAASI,IACtB,OACEH,EAAAA,cAAA,OAAKC,UAAU,4EACbD,EAAAA,cAAA,OAAKC,UAAU,gDAA+C,SACtDD,EAAAA,cAAA,SAAG,WAIjB,CCJe,SAASI,EAAiBP,GAAQ,IAADQ,EAC9C,MAAM,KAAEC,EAAI,SAAER,GAAaD,EACrBU,EAAOD,EAAKE,eACZC,GAAkC,QAAtBJ,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAU,QAEpD,OACEZ,EAAAA,cAACJ,EAAAA,EAAM,CAACE,SAAUA,EAAUc,MAAOH,GACjCT,EAAAA,cAACa,EAAM,MACPb,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,WAASC,UAAU,YAAYa,WAAS,EAACC,SAAS,4BAA4BC,MAAO,CAAEC,UAAW,UAChGjB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkB,SAAS,YAAYX,EAAKY,YAAYP,OAC1CZ,EAAAA,cAAA,SAAIO,EAAKY,YAAYC,OAEvBpB,EAAAA,cAAA,WAASqB,wBAAyB,CAAEC,OAAQf,EAAKgB,MAAQL,SAAS,kBAK5E,C","sources":["webpack://gatsby-starter-blog/./src/components/Layout.tsx","webpack://gatsby-starter-blog/./src/components/Header.tsx","webpack://gatsby-starter-blog/./src/templates/BlogPost.js"],"sourcesContent":["import * as React from 'react'\n\nexport default function Layout(props) {\n  const { location, children } = props\n  let header\n  \n  return (\n    <div>\n      <header className=\"global-header\">{header}</header>\n      <main>\n        {children}\n      </main>      \n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Home() {\n  return (\n    <div className=\"absolute top-0 left-0 right-0 text-white bg-slate-800 h-[64px] shadow-lg\">\n      <div className=\"w-[700px] mx-auto flex items-center h-[64px]\">\n        florin<b>toader</b>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Header from '../components/Header'\nimport './BlogPost.css'\n\nexport default function BlogPostTemplate(props) {\n  const { data, location } = props\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Header />\n      <div className=\"content\">\n        <article className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\" style={{ marginTop: '150px' }}>\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\" />\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Layout","props","location","children","React","className","header","Home","BlogPostTemplate","_data$site$siteMetada","data","post","markdownRemark","siteTitle","site","siteMetadata","title","Header","itemScope","itemType","style","marginTop","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}