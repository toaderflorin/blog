{"version":3,"file":"component---src-templates-blog-post-js-9693cd352b1eca7a42e9.js","mappings":"6KAEe,SAASA,IAGtB,OACEC,EAAAA,cAAA,OAAKC,UAAU,yEACbD,EAAAA,cAAA,OAAKC,UAAU,gDACbD,EAAAA,cAAA,KAAGE,KAAK,IAAIC,MAAO,CAAEC,MAAO,UAC1BJ,EAAAA,cAAA,SAAG,iBAAiB,yDAK9B,C,qECZe,SAASK,EAAOC,GAC7B,MAAM,SAAEC,EAAQ,SAAEC,GAAaF,EAG/B,OACEN,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAQC,UAAU,iBAJlBQ,WAKAT,EAAAA,cAAA,YACGQ,GAIT,C,qECZe,SAASE,IACtB,SAASC,IACP,MAAMC,EAAiBC,OAAOC,QACxBC,EAAiBF,OAAOG,eAAiBH,OAAOG,eAAeC,OAAS,EAExEC,EAAoBN,GADHO,SAASC,gBAAgBC,aACaN,GAAmB,IAC1EO,EAAWH,SAASI,eAAe,YAErCD,GAAYA,EAASnB,QACvBmB,EAASnB,MAAMqB,MAAQN,EAAmB,IAE9C,CAEA,SAASO,IACPZ,OAAOa,oBAAoB,SAAUf,EACvC,CAOA,OALAgB,EAAAA,EAAAA,YAAU,KACRd,OAAOe,iBAAiB,SAAUjB,GAC3Bc,IACN,IAGDzB,EAAAA,cAAA,OAAK6B,GAAG,WAAW5B,UAAU,8DAEjC,C,gHCzBe,SAAS6B,EAAKxB,GAC3B,MAAM,KAAEyB,EAAI,SAAExB,GAAaD,EAK3B,OAJA0B,QAAQC,IAAK,OAAQ1B,EAASL,KAAO6B,EAAKG,YAAYC,OACtDH,QAAQC,IAAI,cAAeF,EAAKG,aAI9BlC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ+B,EAAKG,YAAYE,OAEzBpC,EAAAA,cAAA,QAAMqC,KAAK,sBAAsBC,QAAQ,4DACzCtC,EAAAA,cAAA,QAAMqC,KAAK,iBAAiBC,QAASP,EAAKG,YAAYK,cAG5D,CCTe,SAASC,EAAiBlC,GAAQ,IAADmC,EAC9C,MAAM,KAAEC,EAAI,SAAEnC,GAAaD,EACrByB,EAAOW,EAAKC,eACZC,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBL,QAAU,QAGpD,OAFAJ,QAAQC,IAAI,OAAQS,EAAMnC,GAGxBP,EAAAA,cAACK,EAAAA,EAAM,CAACE,SAAUA,EAAU6B,MAAOQ,GACjC5C,EAAAA,cAACD,EAAAA,EAAM,MACPC,EAAAA,cAAC8B,EAAI,CAACC,KAAMA,EAAMxB,SAAUA,IAC5BP,EAAAA,cAAA,WAASC,UAAU,+BAA+B8C,WAAS,EAAC5C,MAAO,CAAE6C,UAAW,QAASC,aAAc,SACrGjD,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkD,SAAS,YAAYnB,EAAKG,YAAYE,OAC1CpC,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAI+B,EAAKG,YAAYiB,QAGzBnD,EAAAA,cAAA,WAASoD,wBAAyB,CAAEC,OAAQtB,EAAKuB,MAAQJ,SAAS,iBAEpElD,EAAAA,cAACU,EAAAA,EAAQ,MAGf,C","sources":["webpack://gatsby-starter-blog/./src/components/Header.tsx","webpack://gatsby-starter-blog/./src/components/Layout.tsx","webpack://gatsby-starter-blog/./src/components/Scroller.tsx","webpack://gatsby-starter-blog/./src/components/Head.tsx","webpack://gatsby-starter-blog/./src/templates/BlogPost.js"],"sourcesContent":["import React from 'react'\n\nexport default function Header() {\n  function onClick() {}\n\n  return (\n    <div className=\"fixed top-0 left-0 right-0 text-white bg-slate-800 h-[82px] shadow-lg\">\n      <div className=\"w-[700px] mx-auto flex items-center h-[82px]\">\n        <a href=\"/\" style={{ color: 'white' }}>\n          <b>Florin Toader</b>&nbsp;| Welcome to my professional abode on the internet.\n        </a>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport default function Layout(props) {\n  const { location, children } = props\n  let header\n  \n  return (\n    <div>\n      <header className=\"global-header\">{header}</header>\n      <main>\n        {children}\n      </main>      \n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport default function Scroller() {\n  function onScroll() {\n    const scrollPosition = window.scrollY\n    const viewportHeight = window.visualViewport ? window.visualViewport.height : 0\n    const documentHeight = document.documentElement.scrollHeight\n    const scrollPercentage = (scrollPosition / (documentHeight - viewportHeight)) * 100\n    const scroller = document.getElementById('scroller')\n\n    if (scroller && scroller.style) {\n      scroller.style.width = scrollPercentage + '%'\n    }\n  }\n\n  function onCleanup() {\n    window.removeEventListener('scroll', onScroll)\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll)\n    return onCleanup\n  }, [])\n\n  return (\n    <div id=\"scroller\" className=\"fixed h-[3px] left-0 top-0 bg-[color:var(--color-primary)]\"></div>\n  )\n}\n","import React from 'react'\n\nexport default function Head(props: any) {\n  const { post, location } = props\n  console.log( 'POST', location.href + post.frontmatter.image)\n  console.log('frontmatter', post.frontmatter)\n  //  + post.frontmatter.image\n// content={location.href + post.frontmatter.image} />\n  return (\n    <>\n      <title>{post.frontmatter.title}</title>   \n      {/* <meta name=\"image\" content={location.href + post.frontmatter.image} /> */}\n      <meta name=\"og:image:secure_url\" content=\"https://florintoader.me/2024-01-08-ddd-bdd/cucumber.jpg\" />\n      <meta name=\"og:description\" content={post.frontmatter.description} />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Header from '../components/Header'\nimport Scroller from '../components/Scroller'\nimport Head from '../components/Head'\n\nexport default function BlogPostTemplate(props) {\n  const { data, location } = props\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  console.log('site', data, location)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Header />\n      <Head post={post} location={location} />\n      <article className=\"w-[700px] mx-auto pt-[150px]\" itemScope style={{ marginTop: '100px', marginBottom: '20px' }}>\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            <i>{post.frontmatter.date}</i>\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\" />\n      </article>\n      <Scroller />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Header","React","className","href","style","color","Layout","props","location","children","header","Scroller","onScroll","scrollPosition","window","scrollY","viewportHeight","visualViewport","height","scrollPercentage","document","documentElement","scrollHeight","scroller","getElementById","width","onCleanup","removeEventListener","useEffect","addEventListener","id","Head","post","console","log","frontmatter","image","title","name","content","description","BlogPostTemplate","_data$site$siteMetada","data","markdownRemark","siteTitle","site","siteMetadata","itemScope","marginTop","marginBottom","itemProp","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}