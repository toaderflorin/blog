{"version":3,"file":"component---src-pages-using-typescript-tsx-25e2e0bc6a10db1aeae7.js","mappings":"uMAKe,SAASA,EAAOC,GAAQ,IAAD,EACpC,MAAM,SAAEC,GAAaD,EACfE,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,CAACC,WAAiC,QAAtB,EAAAJ,EAAKK,KAAKC,oBAAY,aAAtBC,EAAwBC,QAAK,UAEhDN,EAAAA,cAAAA,MAAAA,CAAKO,UAAU,UACfP,EAAAA,cAAAA,OAAAA,KAAOH,GAGb,C,6GCZA,MAgCaW,EAA0B,IAAMR,EAAAA,cAACS,EAAAA,EAAG,CAACH,MAAM,qBAExD,UAlCwDI,IAAAA,IAAC,KACvDZ,EAAI,SACJa,GACD,SACCX,EAAAA,cAACL,EAAAA,EAAM,KACLK,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOW,EAASC,UAAgB,uBACnDd,EAAKK,KAAKU,UAAU,KAEhCb,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGc,KAAK,yEAAwE,kCAE5E,KAGNd,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,6CC1BX,IAbe,QAAC,UAAEd,GAAW,SAC3B,0BACEe,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGV,C,+CC+BX,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEjB,EAAK,SAAET,GAAU,EAC3C,MAAM,KAAEM,IAASJ,EAAAA,EAAAA,gBAAe,YAc1ByB,EAAkBD,GAAepB,EAAKC,aAAamB,YACnDE,EAAgC,QAApB,EAAGtB,EAAKC,oBAAY,aAAjB,EAAmBE,MAExC,OACE,gCACE,6BAAQmB,EAAkBnB,EAAK,MAAMmB,EAAiBnB,GACtD,wBAAMoB,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASrB,IACnC,wBAAMsB,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAxB,EAAKC,oBAAY,aAAjB,EAAmByB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASrB,IACpC,wBAAMoB,KAAK,sBAAsBC,QAASH,IACzC3B,EAGP,C","sources":["webpack://gatsby-starter-default/./src/components/Layout.tsx","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/Header.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./Header\"\nimport \"./layout.css\"\n\nexport default function Layout(props) {\n  const { children } = props\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n\n      <div className=\"headx\"></div>\n      <main>{children}</main>\n    </>\n  )\n}\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n  </header>\n)\n\nexport default Header\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Layout","props","children","data","useStaticQuery","React","Header","siteTitle","site","siteMetadata","_data$site$siteMetada","title","className","Head","Seo","_ref","location","pathname","buildTime","href","Link","to","style","margin","padding","display","alignItems","justifyContent","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}