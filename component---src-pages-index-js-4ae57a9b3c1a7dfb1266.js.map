{"version":3,"file":"component---src-pages-index-js-4ae57a9b3c1a7dfb1266.js","mappings":"oMAGe,SAASA,IACtB,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,GAAG,oBACND,EAAAA,cAAAA,MAAAA,CAAKC,GAAG,UACND,EAAAA,cAAAA,MAAAA,CACEE,MAAO,CACLC,MAAO,QACPC,eAAgB,YAChBC,gBAAiB,4BACjBC,QAAS,OACTC,aAAc,MACdC,UAAU,kCAGZR,EAAAA,cAAAA,MAAAA,CAAKE,MAAO,CAAEO,MAAO,SACnBT,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGE,MAAO,CAAEQ,SAAU,SACpBV,EAAAA,cAAAA,OAAAA,KAAAA,UACAA,EAAAA,cAAAA,IAAAA,CAAGE,MAAO,CAAEO,MAAO,YAAnB,YAGJT,EAAAA,cAAAA,MAAAA,CAAKC,GAAG,SACND,EAAAA,cAAAA,MAAAA,MACAA,EAAAA,cAAAA,MAAAA,CACEE,MAAO,CACLS,WAAY,oBACZL,QAAS,SACTG,MAAO,UAJX,yDAeb,CCrCc,SAASG,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,KAC5BC,GAD8C,EAAZC,SAC1BF,EAAKG,kBAAkBC,OAC/BC,GAAYC,EAAAA,EAAAA,QAAO,MAEzB,GAAqB,IAAjBL,EAAMM,OACR,OACE,wLAYJ,OACE,2BACE,uBAAKC,IAAKH,GACR,gBAACnB,EAAD,OAEF,uBACEG,MAAO,CACLG,gBAAiB,QACjBG,UAAW,kCAGb,uBACEN,MAAO,CACLoB,OAAQ,oBACRnB,MAAO,QACPoB,UAAW,OACXlB,gBAAiB,UAGnB,2BACA,+BACE,qeAUA,qEAEA,6BAKF,uBAAKH,MAAO,CAAEsB,QAAS,OAAQC,cAAe,SAAUC,IAAK,SAC1DZ,EAAMa,KAAI,SAAAC,GACT,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,2BACEC,IAAKL,EAAKG,OAAOC,KACjBE,UAAU,iBACVC,WAAS,EACTC,SAAS,4BACTC,QAAS,kBApDDC,EAoDsBV,EAAKG,OAAOC,UAnDxDO,EAAAA,EAAAA,UAASD,GADX,IAAwBA,CAoDC,GAET,8BACE,0BACE,wBAAME,SAAS,YAAYX,IAE7B,uBACE3B,MAAO,CACLQ,SAAU,SACVD,MAAO,OACPc,UAAW,QAGZK,EAAKE,YAAYW,OAGtB,2BAASvC,MAAO,CAAEI,QAAS,EAAGiB,UAAW,SACvC,uBACEmB,IAAQd,EAAKG,OAAOC,KAAjB,IAAyBJ,EAAKE,YAAYa,KAC7CT,UAAU,iBAEZ,wBACEU,wBAAyB,CACvBC,OAAQjB,EAAKE,YAAYgB,aAAelB,EAAKmB,SAE/CP,SAAS,gBAEX,qBACEtC,MAAO,CACL8C,WAAY,MACZtC,SAAU,OACVD,MAAO,UAJX,gBAYP,OAMZ,C","sources":["webpack://gatsby-starter-blog/./src/components/HeroSection.tsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport \"./HeroSection.css\"\n\nexport default function Home() {\n  return (\n    <div id=\"header-container\">\n      <div id=\"header\">\n        <div\n          style={{\n            width: \"830px\",\n            backdropFilter: \"blur(3px)\",\n            backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n            padding: \"35px\",\n            borderRadius: \"5px\",\n            boxShadow:'0 0 35px 0 rgba(0, 0, 0, 0.1)'\n          }}\n        >\n          <div style={{ color: \"#555\" }}>\n            <div>\n              <b style={{ fontSize: \"70px\" }}>\n                <span>florin</span>\n                <b style={{ color: \"#fa0265\" }}>toader</b>\n              </b>\n            </div>\n            <div id=\"lower\">\n              <div />\n              <div\n                style={{\n                  borderLeft: \"3px solid #fa0265\",\n                  padding: \"0 20px\",\n                  color: \"black\",\n                }}\n              >\n                Welcome to my professional abode on the internet.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useRef } from \"react\"\nimport { graphql, navigate } from \"gatsby\"\nimport Home from \"../components/HeroSection\"\n\nexport default function BlogIndex({ data, location }) {\n  const posts = data.allMarkdownRemark.nodes\n  const headerRef = useRef(null)\n\n  if (posts.length === 0) {\n    return (\n      <div>\n        No blog posts found. Add markdown posts to \"content/blog\" (or the\n        directory you specified for the \"gatsby-source-filesystem\" plugin in\n        gatsby-config.js).\n      </div>\n    )\n  }\n\n  function navigateToPost(url) {\n    navigate(url)\n  }\n\n  return (\n    <div>\n      <div ref={headerRef}>\n        <Home />\n      </div>\n      <div\n        style={{\n          backgroundColor: \"white\",\n          boxShadow: \"0 0 20px 0 rgba(0, 0, 0, 0.3)\",\n        }}\n      >\n        <div\n          style={{\n            margin: \"130px auto 0 auto\",\n            width: \"830px\",\n            marginTop: \"66vh\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <br />\n          <article>\n            <p>\n              There is As great as the development experience for something like\n              Svelte is, when you start out, nothing beats the frustration of a\n              missing library. You might love functional languages and think\n              that using Elixir for your next game changing product is awesome,\n              until you find how hard it is to find experienced front-end\n              developers for it, that can jump right into the code at a moment's\n              notice. We've all seen it. Don't be dogmatic, be practical\n              instead.\n            </p>\n            <p>Don't be dogmatic, be practical instead.</p>\n\n            <div>\n            </div>\n\n            {/* <h1>READING LIST</h1> */}\n          </article>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n\n              return (\n                <article\n                  key={post.fields.slug}\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                  onClick={() => navigateToPost(post.fields.slug)}\n                >\n                  <header>\n                    <h2>\n                      <span itemProp=\"headline\">{title}</span>\n                    </h2>\n                    <div\n                      style={{\n                        fontSize: \"13.5px\",\n                        color: \"#555\",\n                        marginTop: \"5px\",\n                      }}\n                    >\n                      {post.frontmatter.date}\n                    </div>\n                  </header>\n                  <section style={{ padding: 0, marginTop: \"10px\" }}>\n                    <img\n                      src={`${post.fields.slug}/${post.frontmatter.icon}`}\n                      className=\"article-icon\"\n                    />\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                    <p\n                      style={{\n                        fontWeight: \"500\",\n                        fontSize: \"14px\",\n                        color: \"black\",\n                      }}\n                    >\n                      Read more..\n                    </p>\n                  </section>\n                </article>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          icon\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Home","React","id","style","width","backdropFilter","backgroundColor","padding","borderRadius","boxShadow","color","fontSize","borderLeft","BlogIndex","data","posts","location","allMarkdownRemark","nodes","headerRef","useRef","length","ref","margin","marginTop","display","flexDirection","gap","map","post","title","frontmatter","fields","slug","key","className","itemScope","itemType","onClick","url","navigate","itemProp","date","src","icon","dangerouslySetInnerHTML","__html","description","excerpt","fontWeight"],"sourceRoot":""}